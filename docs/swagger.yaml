basePath: /
definitions:
  apis.ChangePasswordRequest:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    type: object
  apis.LoginRequest:
    properties:
      login:
        description: username hoáº·c email
        type: string
      password:
        type: string
    type: object
  apis.Post:
    properties:
      content:
        type: string
      createdAt:
        type: string
      media_ids:
        items:
          type: integer
        type: array
      post_id:
        type: integer
      user_id:
        type: integer
    type: object
  apis.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  apis.UserProfile:
    properties:
      avatar:
        type: string
      bio:
        type: string
      createdAt:
        type: string
      isPrivate:
        type: boolean
      user_id:
        type: integer
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample Swagger API with net/http
  title: Swagger with net/http
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login using username or email
      parameters:
      - description: Login data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/apis.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - auth
  /me:
    delete:
      description: Mark account as deleted
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Soft delete current account
      tags:
      - auth
    patch:
      consumes:
      - application/json
      description: Update your own profile
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Profile data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/apis.UserProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update own profile
      tags:
      - profile
  /me/password:
    put:
      consumes:
      - application/json
      description: Change password for the current user
      parameters:
      - description: Password data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/apis.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Change password
      tags:
      - auth
  /me/posts:
    get:
      description: Get list of posts of current user
      parameters:
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get own posts
      tags:
      - posts
  /posts:
    post:
      consumes:
      - application/json
      description: Create a new post
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Post data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/apis.Post'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a post
      tags:
      - posts
  /posts/{post_id}:
    delete:
      description: Mark post as deleted
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: integer
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Soft delete a post
      tags:
      - posts
    get:
      description: Get post detail
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: integer
      - description: Bearer token
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apis.Post'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a post by ID
      tags:
      - posts
    patch:
      consumes:
      - application/json
      description: Update content or media_ids of a post
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: integer
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Post update data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/apis.Post'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a post
      tags:
      - posts
  /register:
    post:
      consumes:
      - application/json
      description: Creates a new account
      parameters:
      - description: Register data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/apis.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
  /users:
    get:
      description: Search users by query
      parameters:
      - description: Search query
        in: query
        name: search
        type: string
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort field
        in: query
        name: sort
        type: string
      - description: Bearer token
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search users
      tags:
      - profile
  /users/{user_id}:
    get:
      description: Get profile of a user by user_id
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: Bearer token
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apis.UserProfile'
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user profile
      tags:
      - profile
  /users/{user_id}/posts:
    get:
      description: Get list of posts by user_id
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Bearer token
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get posts of a user
      tags:
      - posts
swagger: "2.0"
